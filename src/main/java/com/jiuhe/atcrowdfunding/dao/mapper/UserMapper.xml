<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jiuhe.atcrowdfunding.dao.UserMapper">

    <resultMap id="BaseResultMap" type="com.jiuhe.atcrowdfunding.domain.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="account" property="account" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="is_deleted" property="isDeleted" jdbcType="BOOLEAN"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
      id,
      account,
      username,
      password,
      email,
      is_deleted,
      create_time
    </sql>

    <sql id="Base_Table">
        t_user
    </sql>
    <delete id="deleteUser" parameterType="collection">
        update
          <include refid="Base_Table"/>
        set
          is_deleted = 1
        where
          account
        in
          <foreach collection="accounts" item="item" open="(" close=")" separator=",">
            #{item.account,jdbcType=VARCHAR}
          </foreach>
    </delete>

    <select id="queryCount" resultType="int">
        select
          count(id)
        from
          <include refid="Base_Table"/>
        where
          is_deleted = 0
    </select>

    <select id="queryPage" resultMap="BaseResultMap">
        select
          account,
          username,
          email
        from
          <include refid="Base_Table"/>
        where
          is_deleted = 0
        <if test="query != null and query.length() != 0">
            and
              account
            like #{query,jdbcType=VARCHAR}
            or
              username
            like #{query,jdbcType=VARCHAR}
        </if>
        order by
          id
        desc
        limit
          #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </select>

    <select id="queryById" parameterType="int" resultMap="BaseResultMap">
      select
        <include refid="Base_Column_List"/>
      from
        <include refid="Base_Table"/>
      where
        id = #{id,jdbcType=INTEGER}
    </select>

    <select id="querByUserNameAndPassword" resultType="int">
      select
        count(id)
      from
        <include refid="Base_Table"/>
      where
        username = #{username,jdbcType=VARCHAR}
      and
        password = #{password,jdbcType=VARCHAR}
    </select>

</mapper>